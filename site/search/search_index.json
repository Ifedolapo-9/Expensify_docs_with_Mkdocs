{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Expensify Docs This documentation provides a comprehensive overview of the Expensify Integration Server endpoints. It offers all the information you need to integrate your application with Expensify's functionalities. The Expensify documentation includes requests for: Programmatically downloading expense report data for analysis or import into your accounting system. Provisioning accounts for new employees. And many more functionalities offered by the Expensify API. The Expensify API is a self-service tool, but you can also find valuable discussions about API usage on the Expensify community forum.","title":"Introduction"},{"location":"#welcome-to-expensify-docs","text":"This documentation provides a comprehensive overview of the Expensify Integration Server endpoints. It offers all the information you need to integrate your application with Expensify's functionalities. The Expensify documentation includes requests for: Programmatically downloading expense report data for analysis or import into your accounting system. Provisioning accounts for new employees. And many more functionalities offered by the Expensify API. The Expensify API is a self-service tool, but you can also find valuable discussions about API usage on the Expensify community forum.","title":"Welcome to Expensify Docs"},{"location":"about/","text":"","title":"About"},{"location":"authentication/","text":"To use the API, you will need to generate API credentials. Create an Expensify account at https://www.expensify.com/ Go to https://www.expensify.com/tools/integrations/ A pair of credentials: partnerUserID and partnerUserSecret will be generated and shown on the page.","title":"Authentication"},{"location":"developer_guide/","text":"","title":"Developer guide"},{"location":"endpoints/","text":"Expensify Endpoints EXPORT Export expense or report data in a configurable format for analysis or insertion into your accounting package. See the export template format reference for more information about how to write export templates. requestJobDescription format NAME FORMAT VALID VALUES DESCRIPTION type String file onReceive JSON object {\"immediateResponse\":[\"returnRandomFileName\"]} Returns the name of the generated report. Only this export mode is supported at the moment. inputSettings JSON object See inputSettings Settings used to filter the reports that are exported. outputSettings JSON object See outputSettings Settings for the generated file. Optional elements test String true, false If set to true, actions defined in onFinish will not be executed. onFinish JSON array See onFinish Actions performed at the end of the export. inputSettings NAME FORMAT VALID VALUES DESCRIPTION type String combinedReportData Specifies all Expensify reports will be combined into a single file. filters JSON object See inputSettings filters Optional elements reportState String One or more of \"OPEN\" , \"SUBMITTED\" , \"APPROVED\" , \"REIMBURSED\" , \"ARCHIVED\" . When using multiple statuses, separate them by a comma, e.g. \"APPROVED,REIMBURSED\" Note: These values respectively match the statuses \"Open\", \"Processing\", \"Approved\", \"Reimbursed\" and \"Closed\" on the website Only the reports matching the specified status(es) will be exported. limit String Any integer, as a string Maximum number of reports to export. employeeEmail String A valid email address Note: * The usage of this parameter is restricted to certain domains * If this parameter is used, reports in the OPEN status cannot be exported The reports will be exported from that account. inputSettings.filters NAME FORMAT VALID VALUES DESCRIPTION reportIDList String, Required if _startDate_ or _approvedAfter_ are not specified Comma-separated list of report IDs to be exported. policyIDList String, Optional Comma-separated list of policy IDs the exported reports must be under. startDate Date, Required if _reportIDList_ or _approvedAfter_ are not specified yyyy-mm-dd formatted date Filters out all reports submitted or created before the given date, whichever occurred last (inclusive). endDate Date, Optional yyyy-mm-dd formatted date Filters out all reports submitted or created after the given date, whichever occurred last (inclusive). approvedAfter Date, Required if _reportIDList_ or _startDate_ are not specified yyyy-mm-dd formatted date Filters out all reports approved before, or on that date. This filter is only used against reports that have been approved. markedAsExported String, Optional Any string Filters out reports that have already been exported with that label out. outputSettings NAME FORMAT VALID VALUES DESCRIPTION fileExtension String One or multiple of \"csv\", \"xls\", \"xlsx\", \"txt\", \"pdf\", \"json\", \"xml\" Specifies the format of the generated report. Note : if the \"pdf\" option is chosen, one PDF file will be generated for each report exported. Optional elements fileBasename String Any valid file base name The name of the generated file(s) will start with this value, and a random part will be added to make each filename globally unique. If not specified, the default value export is used. includeFullPageReceiptsPdf Boolean true , false Specifies whether generated PDFs should include full page receipts. This parameter is used only if fileExtension contains pdf . onFinish (Optional) This section can be used to describe actions that need to be performed at the end of the export. ACTION NAME DESCRIPTION email Send an email linking to the generated report to a provided list of recipients. markAsExported Mark the exported reports as \u201cExported\u201d in Expensify. sftpUpload upload the generated file(s) to an SFTP server. NAME FORMAT VALID VALUES DESCRIPTION email action recipients String Comma-separated list of valid email addresses People to email at the end of the export. message String Plain text or Freemarker message Content of the message. If using Freemarker, the filenames list can be used to get the names of all files that have been generated. markAsExported action label String Any string value The exported reports will be marked as exported with this label. sftpUpload action sftpData JSON object See below sftpUpload.sftpData action host String The SFTP host to connect to. You can upload to a specific folder by setting the homedir (home directory) of the SFTP user to that folder. You cannot specify a specific folder any other way. login String The username to use for SFTP authentication. password String The password to use during authentication. port Integer The port to connect to on the SFTP server. Template parameter The template parameter is used to format the Expensify data as you wish. It is based on the Freemarker language's syntax. See the export template format reference for more information about how to write export templates. We recommend storing your template in separate files, which can be passed to the request more easily with cURL's `@` operator. Example Request curl --location 'https://integrations.expensify.com/Integration-Server/ExpensifyIntegrations' \\ --data-urlencode 'requestJobDescription={ \"type\":\"file\", \"credentials\":{ \"partnerUserID\":{{partnerUserID}}, \"partnerUserSecret\":{{partnerUserSecret}} }, \"onReceive\":{ \"immediateResponse\":[\"returnRandomFileName\"] }, \"inputSettings\":{ \"type\":\"combinedReportData\", \"filters\":{ \"reportIDList\": \"R00bCluvcO4T,R006AseGxMka\" } }, \"outputSettings\":{ \"fileExtension\":\"csv\" } }'\\'' \\ --data-urlencode '\\''template@expensify_template.ftl'\\''' Example Response { \"responseCode\": 200 } CREATE This section details creating a report within a user's Expensify account using the requestJobDescription format. However, this functionality requires prior enablement by Expensify Concierge. Requirements: Domain and Policy Admin permissions Functionality enabled for your domain by contacting concierge@expensify.com Error Handling: If you encounter the \"Not authorized to authenticate as user\" error, it signifies report creation functionality is not enabled for your domain. Request Format: The request utilizes the requestJobDescription format with specific inputSettings . Here's a breakdown of the required fields: Field Name Format Valid Values Description type String \"report\" Specifies the job type as report creation. employeeEmail String A valid email address The report will be created in the corresponding user's account. report (JSON Object) See report details below. Defines report properties. expenses (JSON Array) See expenses details below. Defines expense details to be included in the report (optional). policyID String Any valid Expensify policy ID The report will be associated with this policy. inputSettings.report Details: Field Name Format Valid Values Description title String The title of the report. fields (Optional - JSON Object) A series of key-value pairs. Defines values for custom fields on the specified policy (key names require underscores for non-alphanumeric characters). inputSettings.expenses Details (Optional): Field Name Format Valid Values Description merchant String The merchant name for the expense. currency String Three-letter currency code (e.g., USD, EUR) The currency in which the expense was made. date Date yyyy-mm-dd format The date of the expense. amount Integer The expense amount in cents. Example Request curl --location 'https://integrations.expensify.com/Integration-Server/ExpensifyIntegrations' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --data-urlencode 'requestJobDescription={ \"type\": \"create\", \"credentials\": { \"partnerUserID\": {{partnerUserID}}, \"partnerUserSecret\":{{partnerUserSecret}} }, \"inputSettings\": { \"type\": \"report\", \"policyID\": \"952DB91B963583C7\", \"report\": { \"title\": \"Name of the report\", \"fields\":{ \"reason_of_trip\": \"Business trip\", \"employees\": \"3\" } }, \"employeeEmail\": \"ifedolapo387@gmail.com\", \"expenses\": [ { \"date\": \"2024-03-24\", \"currency\": \"USD\", \"merchant\": \"Name of merchant\", \"amount\": 1234 }, { \"date\": \"2024-03-27\", \"currency\": \"CAD\", \"merchant\": \"Name of merchant\", \"amount\": 2211 } ] } }'\\''' Example Response { \"responseCode\": 200, \"reportName\": \"Name of the report\", \"reportID\": \"R006AseGxMka\" }","title":"Endpoints"},{"location":"endpoints/#expensify-endpoints","text":"","title":"Expensify Endpoints"},{"location":"endpoints/#export","text":"Export expense or report data in a configurable format for analysis or insertion into your accounting package. See the export template format reference for more information about how to write export templates. requestJobDescription format NAME FORMAT VALID VALUES DESCRIPTION type String file onReceive JSON object {\"immediateResponse\":[\"returnRandomFileName\"]} Returns the name of the generated report. Only this export mode is supported at the moment. inputSettings JSON object See inputSettings Settings used to filter the reports that are exported. outputSettings JSON object See outputSettings Settings for the generated file. Optional elements test String true, false If set to true, actions defined in onFinish will not be executed. onFinish JSON array See onFinish Actions performed at the end of the export. inputSettings NAME FORMAT VALID VALUES DESCRIPTION type String combinedReportData Specifies all Expensify reports will be combined into a single file. filters JSON object See inputSettings filters Optional elements reportState String One or more of \"OPEN\" , \"SUBMITTED\" , \"APPROVED\" , \"REIMBURSED\" , \"ARCHIVED\" . When using multiple statuses, separate them by a comma, e.g. \"APPROVED,REIMBURSED\" Note: These values respectively match the statuses \"Open\", \"Processing\", \"Approved\", \"Reimbursed\" and \"Closed\" on the website Only the reports matching the specified status(es) will be exported. limit String Any integer, as a string Maximum number of reports to export. employeeEmail String A valid email address Note: * The usage of this parameter is restricted to certain domains * If this parameter is used, reports in the OPEN status cannot be exported The reports will be exported from that account. inputSettings.filters NAME FORMAT VALID VALUES DESCRIPTION reportIDList String, Required if _startDate_ or _approvedAfter_ are not specified Comma-separated list of report IDs to be exported. policyIDList String, Optional Comma-separated list of policy IDs the exported reports must be under. startDate Date, Required if _reportIDList_ or _approvedAfter_ are not specified yyyy-mm-dd formatted date Filters out all reports submitted or created before the given date, whichever occurred last (inclusive). endDate Date, Optional yyyy-mm-dd formatted date Filters out all reports submitted or created after the given date, whichever occurred last (inclusive). approvedAfter Date, Required if _reportIDList_ or _startDate_ are not specified yyyy-mm-dd formatted date Filters out all reports approved before, or on that date. This filter is only used against reports that have been approved. markedAsExported String, Optional Any string Filters out reports that have already been exported with that label out. outputSettings NAME FORMAT VALID VALUES DESCRIPTION fileExtension String One or multiple of \"csv\", \"xls\", \"xlsx\", \"txt\", \"pdf\", \"json\", \"xml\" Specifies the format of the generated report. Note : if the \"pdf\" option is chosen, one PDF file will be generated for each report exported. Optional elements fileBasename String Any valid file base name The name of the generated file(s) will start with this value, and a random part will be added to make each filename globally unique. If not specified, the default value export is used. includeFullPageReceiptsPdf Boolean true , false Specifies whether generated PDFs should include full page receipts. This parameter is used only if fileExtension contains pdf . onFinish (Optional) This section can be used to describe actions that need to be performed at the end of the export. ACTION NAME DESCRIPTION email Send an email linking to the generated report to a provided list of recipients. markAsExported Mark the exported reports as \u201cExported\u201d in Expensify. sftpUpload upload the generated file(s) to an SFTP server. NAME FORMAT VALID VALUES DESCRIPTION email action recipients String Comma-separated list of valid email addresses People to email at the end of the export. message String Plain text or Freemarker message Content of the message. If using Freemarker, the filenames list can be used to get the names of all files that have been generated. markAsExported action label String Any string value The exported reports will be marked as exported with this label. sftpUpload action sftpData JSON object See below sftpUpload.sftpData action host String The SFTP host to connect to. You can upload to a specific folder by setting the homedir (home directory) of the SFTP user to that folder. You cannot specify a specific folder any other way. login String The username to use for SFTP authentication. password String The password to use during authentication. port Integer The port to connect to on the SFTP server. Template parameter The template parameter is used to format the Expensify data as you wish. It is based on the Freemarker language's syntax. See the export template format reference for more information about how to write export templates. We recommend storing your template in separate files, which can be passed to the request more easily with cURL's `@` operator. Example Request curl --location 'https://integrations.expensify.com/Integration-Server/ExpensifyIntegrations' \\ --data-urlencode 'requestJobDescription={ \"type\":\"file\", \"credentials\":{ \"partnerUserID\":{{partnerUserID}}, \"partnerUserSecret\":{{partnerUserSecret}} }, \"onReceive\":{ \"immediateResponse\":[\"returnRandomFileName\"] }, \"inputSettings\":{ \"type\":\"combinedReportData\", \"filters\":{ \"reportIDList\": \"R00bCluvcO4T,R006AseGxMka\" } }, \"outputSettings\":{ \"fileExtension\":\"csv\" } }'\\'' \\ --data-urlencode '\\''template@expensify_template.ftl'\\''' Example Response { \"responseCode\": 200 }","title":"EXPORT"},{"location":"endpoints/#create","text":"This section details creating a report within a user's Expensify account using the requestJobDescription format. However, this functionality requires prior enablement by Expensify Concierge. Requirements: Domain and Policy Admin permissions Functionality enabled for your domain by contacting concierge@expensify.com Error Handling: If you encounter the \"Not authorized to authenticate as user\" error, it signifies report creation functionality is not enabled for your domain. Request Format: The request utilizes the requestJobDescription format with specific inputSettings . Here's a breakdown of the required fields: Field Name Format Valid Values Description type String \"report\" Specifies the job type as report creation. employeeEmail String A valid email address The report will be created in the corresponding user's account. report (JSON Object) See report details below. Defines report properties. expenses (JSON Array) See expenses details below. Defines expense details to be included in the report (optional). policyID String Any valid Expensify policy ID The report will be associated with this policy. inputSettings.report Details: Field Name Format Valid Values Description title String The title of the report. fields (Optional - JSON Object) A series of key-value pairs. Defines values for custom fields on the specified policy (key names require underscores for non-alphanumeric characters). inputSettings.expenses Details (Optional): Field Name Format Valid Values Description merchant String The merchant name for the expense. currency String Three-letter currency code (e.g., USD, EUR) The currency in which the expense was made. date Date yyyy-mm-dd format The date of the expense. amount Integer The expense amount in cents. Example Request curl --location 'https://integrations.expensify.com/Integration-Server/ExpensifyIntegrations' \\ --header 'Content-Type: application/x-www-form-urlencoded' \\ --data-urlencode 'requestJobDescription={ \"type\": \"create\", \"credentials\": { \"partnerUserID\": {{partnerUserID}}, \"partnerUserSecret\":{{partnerUserSecret}} }, \"inputSettings\": { \"type\": \"report\", \"policyID\": \"952DB91B963583C7\", \"report\": { \"title\": \"Name of the report\", \"fields\":{ \"reason_of_trip\": \"Business trip\", \"employees\": \"3\" } }, \"employeeEmail\": \"ifedolapo387@gmail.com\", \"expenses\": [ { \"date\": \"2024-03-24\", \"currency\": \"USD\", \"merchant\": \"Name of merchant\", \"amount\": 1234 }, { \"date\": \"2024-03-27\", \"currency\": \"CAD\", \"merchant\": \"Name of merchant\", \"amount\": 2211 } ] } }'\\''' Example Response { \"responseCode\": 200, \"reportName\": \"Name of the report\", \"reportID\": \"R006AseGxMka\" }","title":"CREATE"},{"location":"errorcodes/","text":"Expensify API Error Codes This table lists potential error codes encountered when using the Expensify API and their possible reasons. Error Code Possible Reason 207 (Partial Success) Some of the reports failed to update. Their IDs are contained in the list failedReports within the response. 400 (Bad Request) Missing required parameter Invalid parameter value format Malformed JSON body 401 (Unauthorized) Invalid or missing API credentials Insufficient permissions for the requested action 403 (Forbidden) The requested action is not allowed for your account Resource access restrictions in place 404 (Not Found) Requested endpoint does not exist Resource not found (e.g., report with a specific ID) 409 (Conflict) Attempting to create a duplicate resource (e.g., creating a report with an existing ID) Conflicting data in the request 410 (Validation Error) The request contains invalid data that fails validation checks on the Expensify API side. Examples: Malformed date format, invalid enum value, etc. 410 (Gone) Requested endpoint has been deprecated and is no longer available Resource has been deleted 422 (Unprocessable Entity) Validation errors in the request payload Business logic violation (e.g., attempting to update a report with an invalid status) 429 (Too Many Requests) Exceeding API rate limits Throttling applied due to frequent requests 500 (Generic Error) Unexpected error on the Expensify API server. This is a generic error code for internal server issues. Consult Expensify support for further investigation in case of a 500 error.","title":"Error codes"},{"location":"glossary/","text":"Expensify Postman Collection Glossary This table defines key terms you will encounter throughout the Expensify API and this Postman collection. Term Definition Usage in Expensify Collection API (Application Programming Interface) A set of commands, functions, protocols, and objects that expose functionalities of an application or service to software developers. This collection uses the Expensify API to interact with data and functionalities. Authentication The process of verifying a user's identity to grant access to a system or resource. The collection uses API credentials (partnerUserID and partnerUserSecret) for authentication within your Postman requests. Authorization The process of determining what actions a user is allowed to perform after successful authentication. Expensify API controls access based on the permissions associated with your credentials. Collection (Postman) A group of related API requests organized together within Postman. This collection contains requests for various Expensify API functionalities (specific functionalities to be listed based on the collection's purpose). Endpoint A specific URL that represents a resource or functionality within the Expensify API. You'll use different endpoints for various actions like downloading reports (specific endpoints with brief descriptions can be listed). Environment (Postman) A set of key-value pairs that represent environment variables. You can use environments to store reusable values like API credentials or base URLs (specific use cases for environments within the collection can be mentioned). Error Code A numeric code included in the API response that indicates whether the request was successful (e.g., 200 OK) or encountered an error (e.g., 404 Not Found). This collection likely includes descriptions for common Expensify API error codes. FTL FreeMarker Template Language Expensify supports FTL for generating custom report outputs, POST (HTTP Method) An HTTP method used to send data to a server to create or update resources. The collection uses POST requests for actions that modify data, such as creating reports or updating their status. JSON (JavaScript Object Notation) A lightweight data interchange format commonly used to represent structured data in API requests and responses. Expensify uses JSON for data exchange in requests and responses. OAuth An authorization framework that allows users to grant third-party applications access to their accounts without sharing their credentials directly. Partner User ID & Partner User Secret The API credentials you generate from your Expensify account to access the Expensify API. These are required for authentication in your Postman requests. Postman A popular application for building, testing, and managing API requests. This Expensify collection is designed to be used within Postman. Query Parameter Key-value pairs appended to the URL of an API request to filter or modify its behavior. Expensify might use query parameters for filtering reports based on dates or other criteria (specific examples can be listed). Request An HTTP message sent to a server to initiate communication and request a specific action or data. This collection consists of various POST requests tailored for interacting with the Expensify API. Response The HTTP message sent back by the server in response to a request. It contains data or a status code indicating the outcome of the request. Resource An entity or piece of data managed by the Expensify API, such as reports, users, or expense categories. The collection interacts with various Expensify resources (specific resources the collection interacts with can be listed). REST (Representational State Transfer) An architectural style for designing APIs that emphasizes using a standardized set of HTTP methods (GET, POST, PUT, DELETE) to interact with resources. Expensify utilizes a RESTful API.","title":"Glossary"},{"location":"request_format/","text":"Every request to the Expensify API follows the same pattern: a JSON payload that identifies the job to execute is passed as a parameter called requestJobDescription . Additionally, other parameters may be needed based on the type of job. Finally, there is a general rate limit of 50 jobs started per minute. Exceeding this limit will result in the following error message: You have been rate-limited. Please try again later or contact help@expensify.com for assistance. Every request has to be made against the endpoint https://integrations.expensify.com/Integration-Server/ExpensifyIntegrations . Request Job Description format For every request, the requestJobDescription JSON parameter needs to contain the following data: PARAMETER TYPE DESCRIPTION type String The type of job to execute. credentials JSON object An object containing two key-values used to authenticate you: * partnerUserID * partnerUserSecret inputSettings JSON Object (Optional) Additional settings specific to the job type. Refer to the Expensify API documentation for details on supported inputSettings for each job.","title":"Request format"},{"location":"user_guide/","text":"","title":"User guide"},{"location":"writing_your_docs/","text":"","title":"Writing your docs"}]}